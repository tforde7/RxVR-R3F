/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
Command: npx gltfjsx@6.2.16 ./public/models/large-building/large-building.glb --transform 
Files: ./public/models/large-building/large-building.glb [81.38KB] > /Users/cex/Desktop/projects/RxVR-R3F/large-building-transformed.glb [5.05KB] (94%)
*/

import React, { useRef } from 'react'
import { useGLTF } from '@react-three/drei'
import { useControls } from 'leva'
import { RigidBody } from '@react-three/rapier'

export function LargeBuilding(props) {
  const { nodes, materials } = useGLTF('/models/large-building/large-building-without-door-transformed.glb')
  const buildingGeometry = nodes.large_buildingF.geometry
  console.log(buildingGeometry)

  const { largeBuildingScale, largeBuilldingPosition, largeBuildingRotation } = useControls({
    largeBuildingScale: {
      value: {
        x: 11.1,
        y: 8.8,
        z: 1,
      },
      step: 0.1,
    },
    largeBuilldingPosition: {
      value: {
        x: 12.5,
        y: 0,
        z: -1.4,
      },
      step: 0.1,
    },
    largeBuildingRotation: {
      value: 1.83,
      step: 0.01,
    },
  })

  return (
    <RigidBody colliders="trimesh" type="fixed">
      <group
        {...props}
        dispose={null}
        scale={[largeBuildingScale.x, largeBuildingScale.y, largeBuildingScale.z]}
        position={[largeBuilldingPosition.x, largeBuilldingPosition.y, largeBuilldingPosition.z]}
        rotation-y={largeBuildingRotation}>
        <mesh geometry={nodes.large_buildingF.geometry} material={materials.PaletteMaterial001}></mesh>
      </group>
    </RigidBody>
  )
}

useGLTF.preload('/models/large-building/large-building-without-door-transformed.glb')
